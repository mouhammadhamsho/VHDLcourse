// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/11/2019 14:23:25"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    RegisterFileTopLevel
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module RegisterFileTopLevel_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [7:0] i_RF.DataIN;
reg [2:0] i_RF.DesReg_ADR;
reg [2:0] i_RF.RA_ADR;
reg [2:0] i_RF.RB_ADR;
reg i_RF.RESET;
reg i_RF.WR_Data;
// wires                                               
wire [7:0] o_RF.RA_DATA;
wire [7:0] o_RF.RB_DATA;

// assign statements (if any)                          
RegisterFileTopLevel i1 (
// port map - connection between master ports and signals/registers   
	.\i_RF.DataIN (i_RF.DataIN),
	.\i_RF.DesReg_ADR (i_RF.DesReg_ADR),
	.\i_RF.RA_ADR (i_RF.RA_ADR),
	.\i_RF.RB_ADR (i_RF.RB_ADR),
	.\i_RF.RESET (i_RF.RESET),
	.\i_RF.WR_Data (i_RF.WR_Data),
	.\o_RF.RA_DATA (o_RF.RA_DATA),
	.\o_RF.RB_DATA (o_RF.RB_DATA)
);
initial 
begin 
#1000000 $finish;
end 
initial 
begin 
#1000000 $finish;
end 
endmodule

